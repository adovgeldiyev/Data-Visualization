ifelse(n < 1e12, paste0(round(n/1e9), 'B'), # in billions
ifelse(n < 1e15, paste0(round(n/1e12), 'T'), # in trillions
'too big!'
)))))
return(labels)
}
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits)
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000,10000000))
summary(covid)
covid$month<-as.factor(covid$month)
summary(covid)
filter(continent!="NA") %>%
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
filter(continent!=NA) %>%
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
covid%>%filter(continent!="NA") %>%
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
covid%>%filter(continent!="NA") %>%
ggplot(aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
covid%>%filter(continent!=NA) %>%
ggplot(aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
covid%>%filter(continent!="") %>%
ggplot(aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
covid%>%filter(continent!=" ") %>%
ggplot(aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
#Preprocessing
covid <- read.csv(file = 'covid-data.csv', header = TRUE, sep = ",", na.strings = c("","NA"))
covid$continent <- factor(covid$continent, exclude = NULL)
covid$location <- factor(covid$location, exclude = NULL)
covid$date <- as.Date(covid$date,"%m/%d/%Y")
for(i in 1:ncol(covid)){
covid[is.na(covid[,i]), i] <-mean(covid[,i], na.rm = TRUE)
}
covid<-covid %>%
rename(new.cases.smt = new_cases_smoothed,
new.deaths.smt = new_deaths_smoothed,
tot.cases.p.m = total_cases_per_million,
new.cases.p.m = new_cases_per_million,
new.cases.smt.p.m = new_cases_smoothed_per_million,
tot.deaths.p.m = total_deaths_per_million,
new.deaths.p.m = new_deaths_per_million,
new.deaths.smt.p.m = new_deaths_smoothed_per_million,
stry_index = stringency_index,
pop.index = population_density,
cardio.death.rate = cardiovasc_death_rate,
diabet.prev = diabetes_prevalence,
handwash.fac = handwashing_facilities,
hosp.beds.p.thsd = hospital_beds_per_thousand,
human.dev.index = human_development_index
)
num_data = subset(covid,select = -c(iso_code,continent,location,date))
summary(covid)
spearCor <- cor(num_data, method = 'spearman')
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
library(tidyquant)
covid[, "month"] <- format(covid[,"date"], "%m")
covid$month<-as.factor(covid$month)
addUnits <- function(n) {
labels <- ifelse(n < 1000, n,  # less than thousands
ifelse(n < 1e6, paste0(round(n/1e3), 'k'),  # in thousands
ifelse(n < 1e9, paste0(round(n/1e6), 'M'),  # in millions
ifelse(n < 1e12, paste0(round(n/1e9), 'B'), # in billions
ifelse(n < 1e15, paste0(round(n/1e12), 'T'), # in trillions
'too big!'
)))))
return(labels)
}
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 100000000))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
#label size
levels(covid$continent) <- str_wrap( levels(covid$continent), width=10 )
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
write.csv(covid,"cleandata.csv", row.names = FALSE)
distancePlot+geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
distancePlot+geom_point()+ggtitle("log10 distance in Messier")+xlim(0,100)
distancePlot+geom_point()+ggtitle("log10 distance in Messier")+xlim(0,100)
distancePlot+geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
messier_data<-drop_na()
messier_data<-drop_na(messier_data)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(ggforce)
messier_data <- big_five <- read.csv(file = 'MessierData.csv', header = TRUE, sep = ",")
setwd("C:/Users/14023/OneDrive/Desktop/DePaul 5th quarter/DSC 465 Data Visualization/HW3")
messier_data <- big_five <- read.csv(file = 'MessierData.csv', header = TRUE, sep = ",")
View(messier_data)
messier <- big_five <- read.csv(file = 'MessierData.csv', header = TRUE, sep = ",")
messier_data<-drop_na(messier)
distancePlot<-ggplot(messier_data, aes(x=Messier..,y=Distance..LY.))
distancePlot+geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
addUnits <- function(n) {
labels <- ifelse(n < 1000, n,  # less than thousands
ifelse(n < 1e6, paste0(round(n/1e3), 'k'),  # in thousands
ifelse(n < 1e9, paste0(round(n/1e6), 'M'),  # in millions
ifelse(n < 1e12, paste0(round(n/1e9), 'B'), # in billions
ifelse(n < 1e15, paste0(round(n/1e12), 'T'), # in trillions
'too big!'
)))))
return(labels)
}
distancePlot+geom_point()+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits)
distancePlot+geom_point()+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits,limits=c(0,100000000))
distancePlot+geom_point()+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits,limits=c(0,75000000))
messier_data <- read.csv(file = 'MessierData.csv', header = TRUE, sep = ",")
head(messier_data)
messier_data<-drop_na(messier)
distancePlot<-ggplot(messier_data, aes(x=Messier..,y=Distance..LY.))
distancePlot+geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)+ylim(1e+02,1e+10)
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)+
scale_color_manual(breaks = c("Globular Cluster"),
values=c("black"))
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)+
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+ylim(0,15)
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+ylim(0,12.5)
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 14))
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)+ylab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude, ))+
geom_point(size = Size.....)+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude, ))+
geom_point(size = messier_data$Size.....)+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude, ))+
geom_point(aes(size = messier_data$Size.....))+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point(aes(size = messier_data$Size.....))+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Kind))+
geom_point(aes(size = messier_data$Size.....))+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
ggplot(messier_data, aes(x=Messier..,y=Distance..LY., color=Kind))+
geom_point()+scale_y_log10()+ggtitle("log10 distance in Messier")+xlim(0,100)+ylab("Distance L.Y in Log(10)")
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(ggforce)
library(lubridate)
library(corrplot)
library(car)
library(MASS)
spearCor <- cor(num_data, method = 'spearman')
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
ggplot(covid,aes(x=continent, y=total_cases, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(labels =addUnits, limits = c(0, 50000000))
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")
+expand_limits(y = c(0, NA)) +
+expand_limits(y = c(0, NA)) +
scale_y_continuous(limits = c(0, 50000000))
+expand_limits(y = c(0, NA)) +
scale_y_continuous(limits = c(0, 50000000))
ggplot(covid,aes(x=continent, y=total_deaths/1000, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA)) +
scale_y_continuous(limits = c(0, 50000000))
ggplot(covid,aes(x=continent, y=total_deaths/1000, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))# +
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))# +
summary(covid)
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
ggplot(covid,aes(x=continent, y=tot.cases.p.m, fill=continent)) +
geom_bar(stat="identity")#+
ggplot(covid,aes(x=continent, y=tot.cases.p.m, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
summary(covid$total_deaths)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(ggforce)
library(lubridate)
library(corrplot)
library(car)
library(MASS)
#Preprocessing
covid <- read.csv(file = 'covid-data.csv', header = TRUE, sep = ",", na.strings = c("","NA"))
setwd("C:/Users/14023/OneDrive/Desktop/DePaul 5th quarter/DSC 465 Data Visualization/Project")
#Preprocessing
covid <- read.csv(file = 'covid-data.csv', header = TRUE, sep = ",", na.strings = c("","NA"))
covid$continent <- factor(covid$continent, exclude = NULL)
covid$location <- factor(covid$location, exclude = NULL)
covid$date <- as.Date(covid$date,"%m/%d/%Y")
covid<-covid %>%
rename(new.cases.smt = new_cases_smoothed,
new.deaths.smt = new_deaths_smoothed,
tot.cases.p.m = total_cases_per_million,
new.cases.p.m = new_cases_per_million,
new.cases.smt.p.m = new_cases_smoothed_per_million,
tot.deaths.p.m = total_deaths_per_million,
new.deaths.p.m = new_deaths_per_million,
new.deaths.smt.p.m = new_deaths_smoothed_per_million,
stry_index = stringency_index,
pop.index = population_density,
cardio.death.rate = cardiovasc_death_rate,
diabet.prev = diabetes_prevalence,
handwash.fac = handwashing_facilities,
hosp.beds.p.thsd = hospital_beds_per_thousand,
human.dev.index = human_development_index
)
num_data = subset(covid,select = -c(iso_code,continent,location,date))
spearCor <- cor(num_data, method = 'spearman')
corrplot(spearCor, type = "upper", order="hclust",tl.cex = 0.75,tl.col="black")
#label size
levels(covid$continent) <- str_wrap( levels(covid$continent), width=10 )
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
library(tidyquant)
covid[, "month"] <- format(covid[,"date"], "%m")
covid$month<-as.factor(covid$month)
summary(covid)
covid <- na.omit()
covid <- na.omit(covid)
summary(covid)
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar()+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
ggplot(covid,aes(x=continent, y=total_deaths, fill=continent)) +
geom_bar()
ggplot(covid,aes(x=continent, y=total_cases, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
ggplot(covid,aes(x=month, y=total_cases)) +
geom_point()
ggplot(covid,aes(x=month, y=total_cases)) +
geom_sina()
ggplot(covid,aes(x=month, y=total_cases)) +
geom_smooth()
ggplot(covid,aes(x=month, y=total_cases)) +
geom_path()
addUnits <- function(n) {
labels <- ifelse(n < 1000, n,  # less than thousands
ifelse(n < 1e6, paste0(round(n/1e3), 'k'),  # in thousands
ifelse(n < 1e9, paste0(round(n/1e6), 'M'),  # in millions
ifelse(n < 1e12, paste0(round(n/1e9), 'B'), # in billions
ifelse(n < 1e15, paste0(round(n/1e12), 'T'), # in trillions
'too big!'
)))))
return(labels)
}
ggplot(covid,aes(x=continent, y=new_cases, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = scales::comma)
summary(covid)
ggplot(covid,aes(x=continent, y=new_cases, fill=continent)) +
geom_bar(stat="identity")+
expand_limits(y = c(0, NA))+
scale_y_continuous(labels = addUnits)
p+geom_tile(aes(fill=WL))+
scale_x_date(date_breaks = "1 month",date_labels = "%b")+
theme(axis.text.x = element_text(angle=45, hjust = 1))+
labs(title = "Moving average of water levels")+xlab("Date")+ylab("Hours")
library(ggplot2)
library(tidyverse)
library(scales)
library(lubridate)
library(tidyverse)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(ggforce)
source('C:/Users/14023/OneDrive/Desktop/DePaul 5th quarter/DSC 465 Data Visualization/HW3/Hw3_Part2.r', echo=TRUE)
setwd("C:/Users/14023/OneDrive/Desktop/DePaul 5th quarter/DSC 465 Data Visualization/HW3")
messier_data <- read.csv(file = 'MessierData.csv', header = TRUE, sep = ",")
messier_data<-drop_na(messier)
#d
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Kind))+
geom_point(aes(size = messier_data$Size.....))+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
log2(142480)
log2(630023)-log2(142480)
#c
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Apparent.Magnitude))+
geom_point()+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
#d
ggplot(messier_data, aes(x=Distance..LY., y=Apparent.Magnitude, color=Kind))+
geom_point(aes(size = messier_data$Size.....))+scale_x_log10()+ggtitle("Scatterplot of Apparent Magnitude to log(10) distance")+
scale_y_continuous(limits = c(0, 12))+xlab("Distance L.Y in Log(10)")
library(tidyverse)
library(ggplot2)
library(dplyr)
library(Hmisc)
library(ggforce)
air_data = read.csv(file = 'AirQuality.csv', header = TRUE, sep = ",")
head(air_data)
ggplot(air_data, aes(x=Wind,y=Solar.R))+
geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq <- aq %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
aq.qq <- aq %>%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
aq.qq <- air_data %>%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
ggplot(air_data, aes(x=Wind,y=Solar.R))+
geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq <- air_data %>%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
head(air_data)
library(magrittr)
library(scales)
aq.qq <- air_data %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
aq.qq <- air_data %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp),
month =  sort(Month),
day = sort(Day))
aq.qq <- air_data %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()
aq <- air_data %>%
drop_na()
ggplot(air_data, aes(x=Wind,y=Solar.R))+
geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq <- aq %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=sort(Temp))
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()
aq.qq %>% ggplot(aes(wind,solar, colour=Wind)) + geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq %>% ggplot(aes(wind,solar, colour=wind)) + geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")+geom_line()
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")+geom_qq_line()
aq.qq %>% ggplot(aes(sample=wind)) + geom_point()+ggtitle("Wind vs Solar Radiation")+geom_qq_line()
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")+
geom_smooth(method=lm)
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")+
geom_smooth(method=lm,se=FALSE,colour = 'red')
aq.qq %>% ggplot(aes(wind,solar)) + geom_point()+ggtitle("Wind vs Solar Radiation")+
geom_smooth(method=lm,se=FALSE)
#b
aq.qq <- aq %$%
data.frame(wind=sort(Wind),
ozone=sort(Ozone),
solar=sort(Solar.R),
temp=rescale(Temp, to=c(0,1)) %>% sort)
aq.qq %>%
mutate(wind=(wind-min(wind))/(max(wind)-min(wind))) %>%
mutate(solar=rescale(solar, to=c(0,1))) %>%
ggplot(aes(wind,solar)) +
geom_point() +
geom_abline(slope=1, intercept=0)
#c
aq.qq %>%
ggplot(aes(rescale(wind, to=c(0,1)), temp)) + # temp done above
geom_point() +
geom_abline(slope=1, intercept=0)
#c
aq.qq %>%
ggplot(aes(rescale(wind, to=c(0,1)), temp)) + # temp done above
geom_point() +
geom_abline(slope=1, intercept=0) +ggtitle("Wind vs temp")
#c
aq.qq %>%
ggplot(aes(rescale(ozone, to=c(0,1)), temp)) + # temp done above
geom_point() +
geom_abline(slope=1, intercept=0) +ggtitle("Ozone vs temp")
#d
ggplot(aq, aes(sample=wind))+geom_qq()
#d
ggplot(aq, aes(sample=Temp))+geom_qq()
#d
ggplot(aq.qq, aes(sample=wind))+geom_qq()
#d
ggplot(aq, aes(sample=Wind))+geom_qq()+geom_qq_line()
ggplot(aq, aes(sample=Solar.R))+geom_qq()+geom_qq_line()
#d
ggplot(aq, aes(sample=Wind))+geom_qq()+geom_qq_line()+ggtitle("QQ plot of Wind")
ggplot(aq, aes(sample=Solar.R))+geom_qq()+geom_qq_line() + ggtitle("QQ plot of Solar")
